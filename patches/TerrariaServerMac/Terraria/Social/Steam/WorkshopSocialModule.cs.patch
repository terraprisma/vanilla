--- sources/TerrariaServerWindows/Terraria/Social/Steam/WorkshopSocialModule.cs
+++ sources/TerrariaServerMac/Terraria/Social/Steam/WorkshopSocialModule.cs
@@ -28,7 +_,9 @@
 		_publisherInstances = new List<WorkshopHelper.UGCBased.APublisherInstance>();
 		base.ProgressReporter = new WorkshopProgressReporter(_publisherInstances);
 		base.SupportedTags = new SupportedWorkshopTags();
-		_contentBaseFolder = Main.SavePath + Path.DirectorySeparatorChar + "Workshop";
+		string savePath = Main.SavePath;
+		char directorySeparatorChar = Path.DirectorySeparatorChar;
+		_contentBaseFolder = savePath + directorySeparatorChar + "Workshop";
 		_downloader = WorkshopHelper.UGCBased.Downloader.Create();
 		_publishedItems = WorkshopHelper.UGCBased.PublishedItemsFinder.Create();
 		WorkshopIssueReporter workshopIssueReporter = new WorkshopIssueReporter();
@@ -66,7 +_,11 @@
 
 	public override List<string> GetListOfSubscribedWorldPaths()
 	{
-		return _downloader.WorldPaths.Select((string folderPath) => folderPath + Path.DirectorySeparatorChar + "world.wld").ToList();
+		return _downloader.WorldPaths.Select(delegate(string folderPath)
+		{
+			char directorySeparatorChar = Path.DirectorySeparatorChar;
+			return folderPath + directorySeparatorChar + "world.wld";
+		}).ToList();
 	}
 
 	public override List<string> GetListOfSubscribedResourcePackPaths()
@@ -159,7 +_,12 @@
 	private string GetTemporaryFolderPath()
 	{
 		ulong steamID = SteamUser.GetSteamID().m_SteamID;
-		return _contentBaseFolder + Path.DirectorySeparatorChar + steamID + Path.DirectorySeparatorChar;
+		string contentBaseFolder = _contentBaseFolder;
+		char directorySeparatorChar = Path.DirectorySeparatorChar;
+		string text = directorySeparatorChar.ToString();
+		string text2 = steamID.ToString();
+		directorySeparatorChar = Path.DirectorySeparatorChar;
+		return contentBaseFolder + text + text2 + directorySeparatorChar;
 	}
 
 	private bool MakeTemporaryFolder(string temporaryFolderPath)
@@ -197,7 +_,8 @@
 		{
 			return false;
 		}
+		char directorySeparatorChar = Path.DirectorySeparatorChar;
-		if (AWorkshopEntry.TryReadingManifest(text + Path.DirectorySeparatorChar + "workshop.json", out info))
+		if (AWorkshopEntry.TryReadingManifest(text + directorySeparatorChar + "workshop.json", out info))
 		{
 			return true;
 		}
@@ -212,7 +_,8 @@
 		{
 			return false;
 		}
+		char directorySeparatorChar = Path.DirectorySeparatorChar;
-		if (AWorkshopEntry.TryReadingManifest(fullPath + Path.DirectorySeparatorChar + "workshop.json", out info))
+		if (AWorkshopEntry.TryReadingManifest(fullPath + directorySeparatorChar + "workshop.json", out info))
 		{
 			return true;
 		}
